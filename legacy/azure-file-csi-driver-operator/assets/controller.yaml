kind: Deployment
apiVersion: apps/v1
metadata:
  name: azure-file-csi-driver-controller
  namespace: openshift-cluster-csi-drivers
  annotations:
    config.openshift.io/inject-proxy: csi-driver
    config.openshift.io/inject-proxy-cabundle: csi-driver
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: azure-file-csi-driver-controller
  template:
    metadata:
      labels:
        app: azure-file-csi-driver-controller
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    spec:
      hostNetwork: true
      serviceAccount: azure-file-csi-driver-controller-sa
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: azure-file-csi-driver-controller
                topologyKey: kubernetes.io/hostname
      initContainers:
        # Merge /etc/kubernetes/cloud.conf (on the host) with secret "azure-file-credentials" into "merged-cloud-config" emptydir.
        - name: azure-inject-credentials
          image: ${CLUSTER_CLOUD_CONTROLLER_MANAGER_OPERATOR_IMAGE}
          command:
            - /azure-config-credentials-injector
          args:
            - --cloud-config-file-path=/etc/cloud-config/cloud.conf
            - --output-file-path=/etc/merged-cloud-config/cloud.conf
            # Force disable node's managed identity, azure-disk-credentials Secret should be used.
            - --disable-identity-extension-auth
            - --enable-azure-workload-identity=${ENABLE_AZURE_WORKLOAD_IDENTITY}
          env:
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-file-credentials
                  key: azure_client_id
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: azure-file-credentials
                  key: azure_client_secret
                  optional: true
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: azure-disk-credentials
                  key: azure_tenant_id
                  optional: true
            - name: AZURE_FEDERATED_TOKEN_FILE
              valueFrom:
                secretKeyRef:
                  name: azure-disk-credentials
                  key: azure_federated_token_file
                  optional: true
          volumeMounts:
            - name: host-cloud-config
              mountPath: /etc/cloud-config
              readOnly: true
            - name: merged-cloud-config
              mountPath: /etc/merged-cloud-config
      containers:
        - name: csi-driver
          image: ${DRIVER_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - --enable-vhd=false
            - --endpoint=$(CSI_ENDPOINT)
            - --logtostderr
            - --metrics-address=localhost:8211
            - --v=${LOG_LEVEL}
            # Use credentials provided by the azure-inject-credentials container
            - --cloud-config-secret-name=""
            - --cloud-config-secret-namespace=""
            # TODO: make sure this is needed. Taken from upstream
            - --user-agent-suffix=OSS-kubectl
          env:
            - name: AZURE_CREDENTIAL_FILE
              value: "/etc/kubernetes/cloud.conf"
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
          ports:
            - name: healthz
              # Due to hostNetwork, this port is open on a node and cannot
              # conflict with any port used by other CSI drivers.
              containerPort: 10303
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: merged-cloud-config
              mountPath: /etc/kubernetes/
              readOnly: true
            - name: msi
              mountPath: /var/lib/waagent/ManagedIdentity-Settings
              readOnly: true
            - name: bound-sa-token
              mountPath: /var/run/secrets/openshift/serviceaccount
              readOnly: true
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
          # kube-rbac-proxy for the driver container.
          # Provides https proxy for http-based driver metrics.
        - name: driver-kube-rbac-proxy
          args:
          - --secure-listen-address=0.0.0.0:9211
          - --upstream=http://127.0.0.1:8211/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=${TLS_CIPHER_SUITES}
          - --tls-min-version=${TLS_MIN_VERSION}
          - --logtostderr=true
          image: ${KUBE_RBAC_PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
          # Due to hostNetwork, this port is open on a node and cannot
          # conflict with any port used by other CSI drivers.
          - containerPort: 9211
            name: driver-m
            protocol: TCP
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/tls/private
            name: metrics-serving-cert
        - name: csi-provisioner
          image: ${PROVISIONER_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --http-endpoint=localhost:8212
            - --timeout=300s
            - --extra-create-metadata=true
            - --leader-election
            - --leader-election-lease-duration=${LEADER_ELECTION_LEASE_DURATION}
            - --leader-election-renew-deadline=${LEADER_ELECTION_RENEW_DEADLINE}
            - --leader-election-retry-period=${LEADER_ELECTION_RETRY_PERIOD}
            - --v=${LOG_LEVEL}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
          # kube-rbac-proxy for external-provisioner container.
          # Provides https proxy for http-based external-provisioner metrics.
        - name: provisioner-kube-rbac-proxy
          args:
          - --secure-listen-address=0.0.0.0:9212
          - --upstream=http://127.0.0.1:8212/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=${TLS_CIPHER_SUITES}
          - --tls-min-version=${TLS_MIN_VERSION}
          - --logtostderr=true
          image: ${KUBE_RBAC_PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
          # Due to hostNetwork, this port is open on a node and cannot
          # conflict with any port used by other CSI drivers.
          - containerPort: 9212
            name: provisioner-m
            protocol: TCP
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/tls/private
            name: metrics-serving-cert
        - name: csi-attacher
          image: ${ATTACHER_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --http-endpoint=localhost:8213
            - --timeout=120s
            - --leader-election
            - --leader-election-lease-duration=${LEADER_ELECTION_LEASE_DURATION}
            - --leader-election-renew-deadline=${LEADER_ELECTION_RENEW_DEADLINE}
            - --leader-election-retry-period=${LEADER_ELECTION_RETRY_PERIOD}
            - --v=${LOG_LEVEL}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
        - name: attacher-kube-rbac-proxy
          args:
          - --secure-listen-address=0.0.0.0:9213
          - --upstream=http://127.0.0.1:8213/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=${TLS_CIPHER_SUITES}
          - --tls-min-version=${TLS_MIN_VERSION}
          - --logtostderr=true
          image: ${KUBE_RBAC_PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
          # Due to hostNetwork, this port is open on a node and cannot
          # conflict with any port used by other CSI drivers.
          - containerPort: 9213
            name: attacher-m
            protocol: TCP
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/tls/private
            name: metrics-serving-cert
        - name: csi-resizer
          image: ${RESIZER_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --http-endpoint=localhost:8214
            - --leader-election
            - --leader-election-lease-duration=${LEADER_ELECTION_LEASE_DURATION}
            - --leader-election-renew-deadline=${LEADER_ELECTION_RENEW_DEADLINE}
            - --leader-election-retry-period=${LEADER_ELECTION_RETRY_PERIOD}
            - --handle-volume-inuse-error=false
            - --v=${LOG_LEVEL}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
        - name: resizer-kube-rbac-proxy
          args:
          - --secure-listen-address=0.0.0.0:9214
          - --upstream=http://127.0.0.1:8214/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=${TLS_CIPHER_SUITES}
          - --tls-min-version=${TLS_MIN_VERSION}
          - --logtostderr=true
          image: ${KUBE_RBAC_PROXY_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
          # Due to hostNetwork, this port is open on a node and cannot
          # conflict with any port used by other CSI drivers.
          - containerPort: 9214
            name: resizer-m
            protocol: TCP
          resources:
            requests:
              memory: 20Mi
              cpu: 10m
          volumeMounts:
          - mountPath: /etc/tls/private
            name: metrics-serving-cert
        - name: csi-liveness-probe
          image: ${LIVENESS_PROBE_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=$(ADDRESS)
            - --probe-timeout=3s
            - --health-port=10303
            - --v=${LOG_LEVEL}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: host-cloud-config
          hostPath:
            path: /etc/kubernetes/
        - name: msi
          hostPath:
            path: /var/lib/waagent/ManagedIdentity-Settings
        - name: metrics-serving-cert
          secret:
            secretName: azure-file-csi-driver-controller-metrics-serving-cert
        - name: merged-cloud-config
          emptydir:
        - name: bound-sa-token
          projected:
            sources:
            - serviceAccountToken:
                path: token
                audience: openshift
