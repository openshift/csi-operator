# Generated file. Do not edit. Update using "make update".
#
# Loaded from base/controller.yaml
# Applied strategic merge patch overlays/samba/patches/controller_add_driver.yaml
# Applied strategic merge patch common/sidecars/controller_driver_kube_rbac_proxy.yaml
# provisioner.yaml: Loaded from common/sidecars/provisioner.yaml
# provisioner.yaml: Added arguments [--extra-create-metadata=true]
# Applied strategic merge patch provisioner.yaml
# resizer.yaml: Loaded from common/sidecars/resizer.yaml
# resizer.yaml: Added arguments [--timeout=120s -handle-volume-inuse-error=false]
# Applied strategic merge patch resizer.yaml
# livenessprobe.yaml: Loaded from common/sidecars/livenessprobe.yaml
# livenessprobe.yaml: Added arguments [--probe-timeout=3s]
# Applied strategic merge patch livenessprobe.yaml
# Applied strategic merge patch common/standalone/controller_add_affinity.yaml
#
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: smb-csi-driver-controller
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: smb-csi-driver-controller
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: socket-dir
        openshift.io/required-scc: privileged
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: smb-csi-driver-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: smb-csi-driver-controller
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --metrics-address=localhost:8221
        - --v=${LOG_LEVEL}
        env:
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        image: ${DRIVER_IMAGE}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        name: csi-driver
        ports:
        - containerPort: 10307
          name: healthz
          protocol: TCP
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --secure-listen-address=0.0.0.0:9221
        - --upstream=http://127.0.0.1:8221/
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=${TLS_CIPHER_SUITES}
        - --tls-min-version=${TLS_MIN_VERSION}
        - --logtostderr=true
        image: ${KUBE_RBAC_PROXY_IMAGE}
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy-8221
        ports:
        - containerPort: 9221
          name: driver-m
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: metrics-serving-cert
      - args:
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --http-endpoint=localhost:8222
        - --leader-election
        - --leader-election-lease-duration=${LEADER_ELECTION_LEASE_DURATION}
        - --leader-election-renew-deadline=${LEADER_ELECTION_RENEW_DEADLINE}
        - --leader-election-retry-period=${LEADER_ELECTION_RETRY_PERIOD}
        - --leader-election-namespace=${NODE_NAMESPACE}
        - --v=${LOG_LEVEL}
        - --extra-create-metadata=true
        env: []
        image: ${PROVISIONER_IMAGE}
        imagePullPolicy: IfNotPresent
        name: csi-provisioner
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --secure-listen-address=0.0.0.0:9222
        - --upstream=http://127.0.0.1:8222/
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=${TLS_CIPHER_SUITES}
        - --tls-min-version=${TLS_MIN_VERSION}
        - --logtostderr=true
        image: ${KUBE_RBAC_PROXY_IMAGE}
        imagePullPolicy: IfNotPresent
        name: provisioner-kube-rbac-proxy
        ports:
        - containerPort: 9222
          name: provisioner-m
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: metrics-serving-cert
      - args:
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --http-endpoint=localhost:8223
        - --leader-election
        - --leader-election-lease-duration=${LEADER_ELECTION_LEASE_DURATION}
        - --leader-election-renew-deadline=${LEADER_ELECTION_RENEW_DEADLINE}
        - --leader-election-retry-period=${LEADER_ELECTION_RETRY_PERIOD}
        - --leader-election-namespace=${NODE_NAMESPACE}
        - --v=${LOG_LEVEL}
        - --timeout=120s
        - -handle-volume-inuse-error=false
        env: []
        image: ${RESIZER_IMAGE}
        imagePullPolicy: IfNotPresent
        name: csi-resizer
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --secure-listen-address=0.0.0.0:9223
        - --upstream=http://127.0.0.1:8223/
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --tls-cipher-suites=${TLS_CIPHER_SUITES}
        - --tls-min-version=${TLS_MIN_VERSION}
        - --logtostderr=true
        image: ${KUBE_RBAC_PROXY_IMAGE}
        imagePullPolicy: IfNotPresent
        name: resizer-kube-rbac-proxy
        ports:
        - containerPort: 9223
          name: resizer-m
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: metrics-serving-cert
      - args:
        - --csi-address=/csi/csi.sock
        - --health-port=10307
        - --v=${LOG_LEVEL}
        - --probe-timeout=3s
        env: []
        image: ${LIVENESS_PROBE_IMAGE}
        imagePullPolicy: IfNotPresent
        name: csi-liveness-probe
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      nodeSelector:
        node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      serviceAccount: smb-csi-driver-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - name: metrics-serving-cert
        secret:
          secretName: smb-csi-driver-controller-metrics-serving-cert
