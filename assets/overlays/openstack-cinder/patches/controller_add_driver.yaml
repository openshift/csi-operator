kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    config.openshift.io/inject-proxy: csi-driver
    config.openshift.io/inject-proxy-cabundle: csi-driver
spec:
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: "config-cinderplugin,cloud-credentials,legacy-cacert,socket-dir"
        openshift.io/required-scc: restricted-v2
      labels:
        openshift.storage.network-policy.all-egress: allow
        openshift.storage.network-policy.api-server: allow
        openshift.storage.network-policy.dns: allow
        openshift.storage.network-policy.metrics-range: allow
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: openstack-cinder-csi-driver-controller
                topologyKey: kubernetes.io/hostname
      containers:
        - name: csi-driver
          image: ${DRIVER_IMAGE}
          imagePullPolicy: IfNotPresent
          args:
            - /bin/cinder-csi-plugin
            - --provide-controller-service=true
            - --provide-node-service=false
            - --endpoint=$(CSI_ENDPOINT)
            - --http-endpoint=localhost:${DRIVER_METRICS_PORT}
            - --cloud-config=$(CLOUD_CONFIG)
            - --cluster=${CLUSTER_ID}
            - --with-topology=$(ENABLE_TOPOLOGY)
            - --v=${LOG_LEVEL}
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: CLOUD_CONFIG
              value: /etc/kubernetes/config/cloud.conf
            - name: ENABLE_TOPOLOGY
              valueFrom:
                configMapKeyRef:
                  key: enable_topology
                  name: cloud-conf
          ports:
            - name: healthz
              containerPort: 10301
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            # credentials and configuration
            - name: config-cinderplugin
              mountPath: /etc/kubernetes/config
              readOnly: true
            - name: cloud-credentials
              mountPath: /etc/openstack
              readOnly: true
            - name: legacy-cacert
              mountPath: /etc/kubernetes/static-pod-resources/configmaps/cloud-config
              readOnly: true
          resources:
            requests:
              memory: 50Mi
              cpu: 10m
          terminationMessagePolicy: FallbackToLogsOnError
      volumes:
        - name: cloud-credentials
          secret:
            secretName: openstack-cloud-credentials
            items:
              - key: clouds.yaml
                path: clouds.yaml
        - name: config-cinderplugin
          configMap:
            name: cloud-conf
            items:
              - key: cloud.conf
                path: cloud.conf
        - name: legacy-cacert
          configMap:
            name: cloud-conf
            items:
              - key: ca-bundle.pem
                path: ca-bundle.pem
            optional: true
