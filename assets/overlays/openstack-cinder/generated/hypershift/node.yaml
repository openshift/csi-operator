# Generated file. Do not edit. Update using "make update".
#
# Loaded from base/node.yaml
# Applied strategic merge patch overlays/openstack-cinder/patches/node_add_driver.yaml
# host_network_livenessprobe.yaml: Loaded from common/sidecars/host_network_livenessprobe.yaml
# host_network_livenessprobe.yaml: Added arguments [--probe-timeout=10s]
# Applied strategic merge patch host_network_livenessprobe.yaml
# node_driver_registrar.yaml: Loaded from common/sidecars/node_driver_registrar.yaml
# Applied strategic merge patch node_driver_registrar.yaml
#
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    config.openshift.io/inject-proxy: csi-driver
    config.openshift.io/inject-proxy-cabundle: csi-driver
  name: openstack-cinder-csi-driver-node
  namespace: ${NODE_NAMESPACE}
spec:
  selector:
    matchLabels:
      app: openstack-cinder-csi-driver-node
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "false"
        openshift.io/required-scc: privileged
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app: openstack-cinder-csi-driver-node
    spec:
      containers:
      - args:
        - /bin/cinder-csi-plugin
        - --provide-controller-service=false
        - --provide-node-service=true
        - --endpoint=$(CSI_ENDPOINT)
        - --cloud-config=$(CLOUD_CONFIG)
        - --with-topology=$(ENABLE_TOPOLOGY)
        - --v=${LOG_LEVEL}
        env:
        - name: CSI_ENDPOINT
          value: unix://csi/csi.sock
        - name: CLOUD_CONFIG
          value: /etc/kubernetes/config/cloud.conf
        - name: ENABLE_TOPOLOGY
          valueFrom:
            configMapKeyRef:
              key: enable_topology
              name: cloud-conf
        image: ${DRIVER_IMAGE}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 10
        name: csi-driver
        ports:
        - containerPort: 10300
          name: healthz
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /csi
          name: socket-dir
        - mountPath: /dev
          mountPropagation: HostToContainer
          name: device-dir
        - mountPath: /etc/selinux
          name: etc-selinux
        - mountPath: /sys/fs
          name: sys-fs
        - mountPath: /etc/kubernetes/static-pod-resources/configmaps/cloud-config
          name: cacert
          readOnly: true
        - mountPath: /etc/kubernetes/config
          name: config-cinderplugin
          readOnly: true
        - mountPath: /etc/kubernetes/secret
          name: cloud-credentials
          readOnly: true
      - args:
        - --csi-address=/csi/csi.sock
        - --http-endpoint=127.0.0.1:10300
        - --v=${LOG_LEVEL}
        - --probe-timeout=10s
        env: []
        image: ${LIVENESS_PROBE_IMAGE}
        imagePullPolicy: IfNotPresent
        name: csi-liveness-probe
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/cinder.csi.openstack.org/csi.sock
        - --http-endpoint=127.0.0.1:10304
        - --v=${LOG_LEVEL}
        env: []
        image: ${NODE_DRIVER_REGISTRAR_IMAGE}
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm -rf /registration/cinder.csi.openstack.org-reg.sock /csi/csi.sock
        livenessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: rhealthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: csi-node-driver-registrar
        ports:
        - containerPort: 10304
          name: rhealthz
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
        - mountPath: /registration
          name: registration-dir
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      serviceAccount: openstack-cinder-csi-driver-node-sa
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /var/lib/kubelet/plugins/cinder.csi.openstack.org/
          type: DirectoryOrCreate
        name: socket-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
        name: registration-dir
      - hostPath:
          path: /dev
          type: Directory
        name: device-dir
      - hostPath:
          path: /etc/selinux
          type: DirectoryOrCreate
        name: etc-selinux
      - hostPath:
          path: /sys/fs
          type: Directory
        name: sys-fs
      - name: metrics-serving-cert
        secret:
          secretName: openstack-cinder-csi-driver-node-metrics-serving-cert
      - name: cloud-credentials
        secret:
          items:
          - key: clouds.yaml
            path: clouds.yaml
          secretName: openstack-cloud-credentials
      - configMap:
          items:
          - key: cloud.conf
            path: cloud.conf
          name: cloud-conf
        name: config-cinderplugin
      - configMap:
          items:
          - key: ca-bundle.pem
            path: ca-bundle.pem
          name: cloud-conf
          optional: true
        name: cacert
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
